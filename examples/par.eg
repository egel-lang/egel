# Egel's par construct.
#
# Dropped `par` for `async/await`.

import "prelude.eg"

namespace Fibonnaci (
  using System

  def par =
    [ F G -> let X = async F in let Y = async G in (await X, await Y) ]

  def fib =
    [ 0 -> 0
    | 1 -> 1
    | N -> fib (N- 2) + fib (N- 1) ]

  def pfib = 
    [ 0 -> 0 
    | 1 -> 1 
    | N -> [ (N0, N1) -> N0 + N1 ] (par [_ -> pfib (N - 1) ] [_ -> pfib (N - 2)]) ]

)

using Fibonnaci
using System

def main = pfib 15
